# -*- coding: utf-8 -*-
from zerver.lib.test_classes import WebhookTestCase


class HoneybadgerHookTests(WebhookTestCase):
    STREAM_NAME = "honeybadger"
    URL_TEMPLATE = "/api/v1/external/honeybadger?&api_key={api_key}&stream={stream}"

    def test_rate_exceeded_message(self) -> None:
        expected_topic = "My Project/development"
        expected_message = "RuntimeError has occurred 2 time(s) in the past hour. For more info: " \
                           "[See this](https://app.honeybadger.io/projects/69422/faults/61726306/"\
                           "5fe589ce-65ed-11ea-8d48-7ca93d6d114b)"

        self.send_and_test_stream_message('rate_exceeded', expected_topic, expected_message,
                                          content_type="application/json")

    def test_resolved_message(self) -> None:
        expected_topic = "My Project/development"
        expected_message = "The error **61726306** was resolved by *Joerge*. For more info: " \
                           "[See this](https://app.honeybadger.io/projects/69422/faults/61726306)"

        self.send_and_test_stream_message('error_resolved', expected_topic, expected_message,
                                          content_type="application/json")

    def test_occurred_message(self) -> None:
        expected_topic = "My Project/development"
        expected_message = "RuntimeError: This is a runtime error generated by the crywolf app. The error(" \
                           "**61726306**) occurred at: **2020-03-14T12:27:00.386268Z**. For more info: " \
                           "[See this](https://app.honeybadger.io/projects/69422/faults/61726306)"

        self.send_and_test_stream_message('error_occurred', expected_topic, expected_message,
                                          content_type="application/json")

    def test_uptime_message(self) -> None:
        expected_topic = "My Project/development"
        expected_message = "Resume Builder is back up after 1m 1s. For more info: " \
                           "[See this](https://app.honeybadger.io/projects/69422/sites/ff71a50d-dc88-448b-"\
                           "8a1b-97587d8c0fb9)"

        self.send_and_test_stream_message('uptime', expected_topic, expected_message,
                                          content_type="application/json")

    def test_downtime_message(self) -> None:
        expected_topic = "My Project/development"
        expected_message = "Resume Builder is down. For more info: " \
                           "[See this](https://app.honeybadger.io/projects/69422/sites/ff71a50d-dc88-448b-"\
                           "8a1b-97587d8c0fb9)"
        self.send_and_test_stream_message('downtime', expected_topic, expected_message,
                                          content_type="application/json")

    def test_commented_message(self) -> None:
        expected_topic = "My Project/production"
        expected_message = "On error *61859041*, **Joerge** commented \n" + \
                           "```quote\n" + \
                           "\"At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis " \
                           "praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias " \
                           "excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui " \
                           "officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum " \
                           "quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta " \
                           "nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat " \
                           "facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. " \
                           "Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus " \
                           "saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. " \
                           "Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis " \
                           "voluptatibus maiores alias consequatur aut perferendis doloribus asperiores " \
                           "repellat.\"\r\nThe standard Lorem Ipsum passage, used since the " \
                           "1500s\r\n\r\n\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, " \
                           "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad " \
                           "minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea " \
                           "commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit " \
                           "esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat " \
                           "non proident, sunt in culpa qui officia deserunt mollit anim id est " \
                           "laborum.\"\r\nSection 1.10.32 of \"de Finibus Bonorum et Malorum\", written by " \
                           "Cicero in 45 BC\r\n\r\n\"Sed ut perspiciatis unde omnis iste natus error sit " \
                           "voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa " \
                           "quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt " \
                           "explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut " \
                           "fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi " \
                           "nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, " \
                           "consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut " \
                           "labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, " \
                           "quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid " \
                           "ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea " \
                           "voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem " \
                           "eum fugiat quo voluptas nulla pariatur?\"\n" + \
                           "```" + \
                           "\n" + \
                           "For more info: [See this](https://app.honeybadger.io/projects/69422/faults/61859041)"

        self.send_and_test_stream_message('commented', expected_topic, expected_message,
                                          content_type="application/json")

    def test_check_in_reporting_message(self) -> None:
        expected_topic = "My Project/development"
        expected_message = "REPORTING: Sample Test is reporting again. *Sample Test* was expected " \
                           "to report at: **2020-03-14T12:35:58.503611Z** and reported at: " + \
                           "**2020-03-14T12:34:58.503611Z**. For more info: " \
                           "[See this](https://app.honeybadger.io/projects/69422/check_ins)"

        self.send_and_test_stream_message('check_in_reporting', expected_topic, expected_message,
                                          content_type="application/json")

    def test_check_in_missing_message(self) -> None:
        expected_topic = "My Project/development"
        expected_message = "MISSING: Sample Test hasn't checked in for 3 minutes. *Sample Test* was expected " \
                           "to report at: **2020-03-14T12:35:12.128944Z** and reported at: " + \
                           "**2020-03-14T12:31:29.113825Z**. For more info: " \
                           "[See this](https://app.honeybadger.io/projects/69422/check_ins)"

        self.send_and_test_stream_message('check_in_missing', expected_topic, expected_message,
                                          content_type="application/json")

    def test_assigned_messsage(self) -> None:
        expected_topic = "My Project/development"
        expected_message = "RuntimeError assigned to Joerge by Joerge. Error **61726306** has been " \
                           "assigned to **Joerge**. For more info: " \
                           "[See this](https://app.honeybadger.io/projects/69422/faults/61726306)"

        self.send_and_test_stream_message('assigned', expected_topic, expected_message,
                                          content_type="application/json")

    def get_body(self, fixture_name: str) -> str:
        return self.webhook_fixture_data("honeybadger", fixture_name, file_type="json")
