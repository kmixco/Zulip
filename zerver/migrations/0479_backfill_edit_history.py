# Generated by Django 3.2.2 on 2021-05-11 10:00
from django.db import migrations
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.migrations.state import StateApps
from django.db.models import JSONField
from django.db.models.functions import Cast

BATCH_SIZE = 5000


def backfill_edit_history(apps: StateApps, schema_editor: BaseDatabaseSchemaEditor) -> None:
    Message = apps.get_model("zerver", "Message")
    ArchivedMessage = apps.get_model("zerver", "ArchivedMessage")
    msg_models = [Message, ArchivedMessage]

    for model in msg_models:
        if not model.objects.filter(
            edit_history__isnull=False, edit_history_entries__exact=[]
        ).exists():
            continue

        messages = model.objects.filter(edit_history__isnull=False, edit_history_entries__exact=[])
        current_id_lower_bound = messages.earliest("id").id
        id_upper_bound = messages.latest("id").id

        while current_id_lower_bound <= id_upper_bound:
            current_id_upper_bound = min(current_id_lower_bound + BATCH_SIZE, id_upper_bound)
            model.objects.filter(
                edit_history__isnull=False,
                edit_history_entries__exact=[],
                id__range=(current_id_lower_bound, current_id_upper_bound),
            ).update(edit_history_entries=Cast("edit_history", JSONField()))
            current_id_lower_bound += BATCH_SIZE + 1


class Migration(migrations.Migration):
    atomic = False

    dependencies = [
        ("zerver", "0478_add_edit_history_entries"),
    ]

    operations = [
        migrations.RunPython(
            backfill_edit_history, reverse_code=migrations.RunPython.noop, elidable=True
        ),
    ]
